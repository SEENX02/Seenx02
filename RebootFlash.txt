Create a random vector of 20 elements between 1 and 10
x=sample(1:10,20,T) # 20 elements between 1 and 10 at random
x
///////////////////////////////////////////

From the data above
Access 2nd element
Elements from 2 to 6
Elements at 2,5,8th position
Replace second element by 150
Display all elements less than 5
x[2] #indexing
x[2:6] # continous indexing
x[c(2,5,8)] # custom indexing
x[2]=150 # replacing
which(x<5) # which() function outputs index number of condition passed.
x[which(x<5)]
///////////////////////////////////////
Create a data frame for the following specifications ,
Column 1 : Subject (5 subjects)
Columns 2: Internal Marks ( out of 25 in these 5 subjects)
Columns 3: Theory Marks ( out of 75 in these 5 subjects)
Columns 4: Total Marks ( out of 100 in these 5 subjects)
subject = c("A","B", "C","D","E")
internal = c(12,15,07,19,10)
theory = c(65,55,21,72,50)
total= internal+theory
df = data.frame(subject, internal, theory , total) #data.frame() function
df #prints the table

////////////////////////////////////////////
Create the following matrices in R
x=c(-4,0,5,0,1,1,0,-11,1)
m1= matrix(x, 3,3,T)
m1
## [,1] [,2] [,3]
## [1,] -4 0 5
## [2,] 0 1 1
## [3,] 0 -11 1
y=c(1,0,0,0,1,1,1,1,1,0,0,0)
m2=matrix(y,3,4,F)
m2

////////////////////////////////////////////////

Check if the following matrices are invertible or not , if invertible find its inverse.
−4 2 −1
6 1 3
0 −1 2
1 0 1
0 1 1
0 1 1
x=c(-4,2,-1,6,1,3,0,-1,2)
A = matrix(x,3,3,T)
a = det(A)
if(round(a,2)==0){
cat(" Matrix is not invertible as determinant is Zero")
} else {
cat("Matrix is invertible as determinant is ", round(a,2))
cat("\n Inverse of the matrix is : \n")
solve(A)
}
//////////////////////////////////////////////

Find mean median and Quartiles and histogram of the data given below
-32 -67 88 81 -38 55 66 55 -46 -72 45 -35 92 -54 -41

data = c(-32,-67,88,81,-38,55,66,55,-46,-72,45,-35,92,-54,-41)
data
me = mean(data)
md = median(data)
q1 = quantile(data, 0.25)
q2 = quantile(data, 0.5)
q3 = quantile(data, 0.75)
cat(" Mean of the data given is : ", me )
cat(" \n Median of the data given is : ", md )
cat(" \n First Quartile of the data given is : ", me )
cat(" \n Second Quartile of the data given is : ", me )
cat(" \n Third Quartile of the data given is : ", me )
hist(data,
col = 'yellow',
border = 'red')

////////////////////////////////////////////////

Generate 100 observations in the range -25 to 25 , find its mean , median , quartiles, D3, D7, P65 , P82
data = sample(-25:25 , size = 100 , replace = T)
# sample() function generates random number of specified size and range
cat(" randomly generated data : \n" , data)
cat(" \n data arranged in ascending order : \n" , sort(data))
summary(data)
D3 = quantile(data , 0.30)
D7 = quantile(data , 0.70)
P65 = quantile(data ,0.65)
P82 =quantile(data , 0.82)
cat(" \n Third decile (D3) the data given is : ", D3 )
cat(" \n Seventh decile (D7) of the data given is : ", D7 )
cat(" \n 65th Percentile (P65) of the data given is : ", P65 )
cat(" \n 82nd Percentile (P82)of the data given is : ", P82 )
///////////////////////////////////////////////

Generate 3 random datasets of 25 observations between 1 and 10 and compare their standard deviations and skewness
d1 = sample(1:10,25,T)
d2 = sample(1:10,25,T)
d3 = sample(1:10,25,T)
cat(" Data set 01 : \n ", d1)
cat(" \n Data set 01 asc order : \n ", sort(d1))
cat(" \n Data set 02 : \n ", d2)
cat(" \n Data set 02 asc order : \n ", sort(d2))
cat(" \n Data set 03 : \n ", d3)
cat(" \n Data set 03 asc order : \n", sort(d3))
cat(" \n Standard Deviation of Data set 01 : ", sd(d1))
cat(" \n Standard Deviation of Data set 02 : ", sd(d2))
cat(" \n Standard Deviation of Data set 03 : ", sd(d3))
s1 = moments::skewness(d1)
s2 = moments::skewness(d2)
s3 = moments::skewness(d3)
cat(" \n Skewness of Data set 01 : ", s1)
cat(" \n Skewness of Data set 02 : ", s2 )
cat(" \n Skewness of Data set 03 : ", s3)

///////////////////////////////////////////////
Import the dataset sample internal marks.xlsx and perform the following operations.
importing (5m) + extracting rows (5m) + any 02 questions (10 m) = total(20 m )
1. Import Division 01 internal marks as div01 (5m)
2. Find out number of students appeared for COST internal exam.
3. Find number of students passed in Java
4. Roll numbers of students passed in all internal exams
5. Number of students who arent ‘all clear’
#q1 : Import Division 01 internal marks as div01
library(readxl)
div01 = read_excel("C:/Users/p_khale07/Downloads/Sample Internal Marks SYIT_edit.xlsx",sheet = "Sheet1")
div01
# the dollar operator will extract a particular row.
r = div01$`Roll. No`
a = div01$JAVA1
b = div01$SE1
c = div01$COST1
d = div01$ES1
e = div01$CG1 #(5m)
#q2 : Find out number of students appeared for COST internal exam.
cost_att = length(c)
cat("\n Total nummber of students attending cost exam : " , cost_att)
#q3 :Find number of students passed in Java
java_pass = sum(a>=10)
cat("\n Total nummber of students passed in java : " , java_pass)
#q4 : Roll numbers of students passed in all internal exams
all_clear = sum(a>=10 & b>=10 & c>=10 & d>=10 & e>=10) # "&" represents "and" operator
cat("\n Total nummber of students passed in all exams : " , all_clear)
#q5 : Number of students who arent 'all clear'
fail_count = sum(a<10 | b<10 | c<10 | d<10 | e<10) # "|" represents "or" operator
cat("\n Total nummber of students passed in all exams : " , fail_count)

//////////////////////////////////////////////
) Import the dataset sample internal marks.xlsx and find mean , median , standard deviation and skewness of any 3 subjects of your
choice of division 02.
#q1 : Import Division 01 internal marks as div01
library(readxl)
div02 = read_excel("C:/Users/p_khale07/Downloads/Sample Internal Marks SYIT_edit.xlsx",sheet = "Sheet2")
div02
# the dollar operator will extract a particular row.
r = div02$Roll.No
a = div02$JAVA2
b = div02$SE2
c = div02$COST2
d = div02$ES2
e = div02$CG2
cost_me = mean(c)
cost_md = median(c)
cost_sd = sd(c)
cost_skp = moments::skewness(c)
cat("mean of cost marks : ",cost_me)
cat("median of cost marks : ",cost_md)
cat("standard deviation of cost marks : ",cost_sd)
cat("skewness coefficient of cost marks : ",cost_skp)

////////////////////////////////////////////
Draw a graph of normally distributed data with mean 20 and sd 2 (10m)
m = 20
sd = 2
x = seq(m-4*sd,m+4*sd,0.1)
pr = dnorm(x,m,sd)
plot(x,
pr,
xlab = "data",
ylab = "relative frequency"
)
and for line plotted

plot(x,
pr,
type = "l", # instead of dots this will draw a line
xlab = "data",
ylab = "relative frequency"
)
/////////////////////////////////////////////
Find correlation between two variables X and Y using scatter diagram.
x=c(56, 42, 36, 47,49,42,60,72,63,55)
y=c(147, 125, 118, 128, 145, 140, 155,160,149,150)
plot(x, y,
main = ' scatter plot ',
xlab = ' x variable',
ylab = ' y variable')

//////////////////////////////////////////////
) Comment correlation between two variables X and Y
x=c(56, 42, 36, 47,49,42,60,72,63,55)
y=c(147, 125, 118, 128, 145, 140, 155,160,149,150)
r = cor(x,y, method = 'pearson')
cat(" Karl Pearsons Correlation coefficient r : ", r)
# r > 0 : positive corr.
# r < 0 : neg corr.
# r = 0 : no corr.
if (r<0){
cat(" Variables are negatively correlated with r : ",r )
}else if (r>0) {
cat(" \n Variables are positively correlated with r : ",r )
} else {
cat("\n Variables are not correlated with r : ",r )
}

///////////////////////////////////////////////
Find regression equation of Y on X and plot on the scatter diagram. Find values of a and b in y=a+bx
x=c(56, 42, 36, 47,49,42,60,72,63,55)
y=c(147, 125, 118, 128, 145, 140, 155,160,149,150)
plot(x,y)
model = lm(y~x)
print(model)
abline(model)